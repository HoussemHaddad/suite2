{"remainingRequest":"C:\\Users\\Houssem\\Desktop\\2\\node_modules\\thread-loader\\dist\\cjs.js??ref--10-2!C:\\Users\\Houssem\\Desktop\\2\\node_modules\\ts-loader\\index.js??ref--10-3!C:\\Users\\Houssem\\Desktop\\2\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\Houssem\\Desktop\\2\\node_modules\\tslint-loader\\index.js!C:\\Users\\Houssem\\Desktop\\2\\src\\main\\webapp\\app\\core\\auth\\auth-session.service.ts","dependencies":[{"path":"C:\\Users\\Houssem\\Desktop\\2\\src\\main\\webapp\\app\\core\\auth\\auth-session.service.ts","mtime":1533070314485},{"path":"C:\\Users\\Houssem\\Desktop\\2\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\Houssem\\Desktop\\2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1533071330032},{"path":"C:\\Users\\Houssem\\Desktop\\2\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1533071329320},{"path":"C:\\Users\\Houssem\\Desktop\\2\\node_modules\\ts-loader\\index.js","mtime":1519365772000},{"path":"C:\\Users\\Houssem\\Desktop\\2\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\Houssem\\Desktop\\2\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar http_1 = require(\"@angular/common/http\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar app_constants_1 = require(\"app/app.constants\");\r\nvar AuthServerProvider = /** @class */ (function () {\r\n    function AuthServerProvider(http) {\r\n        this.http = http;\r\n    }\r\n    AuthServerProvider.prototype.login = function (credentials) {\r\n        var data = 'j_username=' +\r\n            encodeURIComponent(credentials.username) +\r\n            '&j_password=' +\r\n            encodeURIComponent(credentials.password) +\r\n            '&remember-me=' +\r\n            credentials.rememberMe +\r\n            '&submit=Login';\r\n        var headers = new http_1.HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\r\n        return this.http.post(app_constants_1.SERVER_API_URL + 'api/authentication', data, { headers: headers });\r\n    };\r\n    AuthServerProvider.prototype.logout = function () {\r\n        var _this = this;\r\n        // logout from the server\r\n        return this.http.post(app_constants_1.SERVER_API_URL + 'api/logout', {}, { observe: 'response' }).pipe(operators_1.map(function (response) {\r\n            // to get a new csrf token call the api\r\n            _this.http.get(app_constants_1.SERVER_API_URL + 'api/account').subscribe(function () { }, function () { });\r\n            return response;\r\n        }));\r\n    };\r\n    AuthServerProvider = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" && _a || Object])\r\n    ], AuthServerProvider);\r\n    return AuthServerProvider;\r\n    var _a;\r\n}());\r\nexports.AuthServerProvider = AuthServerProvider;\r\n",{"version":3,"file":"C:\\Users\\Houssem\\Desktop\\2\\src\\main\\webapp\\app\\core\\auth\\auth-session.service.ts","sourceRoot":"","sources":["C:\\Users\\Houssem\\Desktop\\2\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\Houssem\\Desktop\\2\\node_modules\\tslint-loader\\index.js!C:\\Users\\Houssem\\Desktop\\2\\src\\main\\webapp\\app\\core\\auth\\auth-session.service.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAC3C,6CAA6E;AAE7E,4CAAqC;AAErC,mDAAmD;AAGnD;IACI,4BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,kCAAK,GAAL,UAAM,WAAW;QACb,IAAM,IAAI,GACN,aAAa;YACb,kBAAkB,CAAC,WAAW,CAAC,QAAQ,CAAC;YACxC,cAAc;YACd,kBAAkB,CAAC,WAAW,CAAC,QAAQ,CAAC;YACxC,eAAe;YACf,WAAW,CAAC,UAAU;YACtB,eAAe,CAAC;QACpB,IAAM,OAAO,GAAG,IAAI,kBAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,mCAAmC,CAAC,CAAC;QAE3F,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,8BAAc,GAAG,oBAAoB,EAAE,IAAI,EAAE,EAAE,OAAO,SAAA,EAAE,CAAC,CAAC;IACpF,CAAC;IAED,mCAAM,GAAN;QAAA,iBASC;QARG,yBAAyB;QACzB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,8BAAc,GAAG,YAAY,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC,IAAI,CAClF,eAAG,CAAC,UAAC,QAA2B;YAC5B,uCAAuC;YACvC,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,8BAAc,GAAG,aAAa,CAAC,CAAC,SAAS,CAAC,cAAO,CAAC,EAAE,cAAO,CAAC,CAAC,CAAC;YAC5E,MAAM,CAAC,QAAQ,CAAC;QACpB,CAAC,CAAC,CACL,CAAC;IACN,CAAC;IA1BQ,kBAAkB;QAD9B,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAEL,iBAAU,oBAAV,iBAAU;OAD3B,kBAAkB,CA2B9B;IAAD,yBAAC;;CAAA,AA3BD,IA2BC;AA3BY,gDAAkB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { SERVER_API_URL } from 'app/app.constants';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthServerProvider {\n    constructor(private http: HttpClient) {}\n\n    login(credentials): Observable<any> {\n        const data =\n            'j_username=' +\n            encodeURIComponent(credentials.username) +\n            '&j_password=' +\n            encodeURIComponent(credentials.password) +\n            '&remember-me=' +\n            credentials.rememberMe +\n            '&submit=Login';\n        const headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\n\n        return this.http.post(SERVER_API_URL + 'api/authentication', data, { headers });\n    }\n\n    logout(): Observable<any> {\n        // logout from the server\n        return this.http.post(SERVER_API_URL + 'api/logout', {}, { observe: 'response' }).pipe(\n            map((response: HttpResponse<any>) => {\n                // to get a new csrf token call the api\n                this.http.get(SERVER_API_URL + 'api/account').subscribe(() => {}, () => {});\n                return response;\n            })\n        );\n    }\n}\n"]}]}